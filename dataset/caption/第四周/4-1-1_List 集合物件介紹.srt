1
00:00:12,200 --> 00:00:15,980


2
00:00:15,980 --> 00:00:19,160
集合物件指的是一群物件的集合

3
00:00:19,160 --> 00:00:21,800
並且有一定的管理方法

4
00:00:21,800 --> 00:00:26,980
這裡的管理指的是新增、修改、刪除、查詢、

5
00:00:26,980 --> 00:00:28,620
擷取這群的資料

6
00:00:29,620 --> 00:00:32,520
在Python中有四個重要的物件型態

7
00:00:32,520 --> 00:00:35,980
List,Tuple,Set,Dictionary

8
00:00:35,980 --> 00:00:39,300
為什麼需要四種不同型態的集合物件呢

9
00:00:40,300 --> 00:00:42,880
我們必須要考量幾個因素

10
00:00:42,880 --> 00:00:44,880
資料內部是不是可以重複的

11
00:00:44,880 --> 00:00:46,340
有沒有順序

12
00:00:46,340 --> 00:00:47,640
可不可以修改

13
00:00:48,640 --> 00:00:50,960
有沒有索引值

14
00:00:50,960 --> 00:00:52,460
可不可以放不同型態

15
00:00:53,460 --> 00:00:58,700
在不同的因素下我們可以使用不同的集合物件型態

16
00:00:58,700 --> 00:01:02,200
List是最常被使用的集合物件

17
00:01:02,200 --> 00:01:04,180
它的特色是

18
00:01:04,180 --> 00:01:05,480
他是有順序性的

19
00:01:05,480 --> 00:01:07,400
資料也可以重複

20
00:01:07,400 --> 00:01:08,860
可以瀏覽

21
00:01:08,860 --> 00:01:10,120
可以修改

22
00:01:10,120 --> 00:01:14,160
裡面也可以放不同型態的資料

23
00:01:14,160 --> 00:01:17,100
例如我們在這個地方看到students

24
00:01:17,100 --> 00:01:19,100
裡面有三筆資料

25
00:01:19,100 --> 00:01:20,380
nick,albert跟jie

26
00:01:21,380 --> 00:01:26,939
在List中我們用一個中括號來代表他是List的資料型態

27
00:01:27,939 --> 00:01:29,279
裡面我們可以放字串

28
00:01:30,279 --> 00:01:32,560
或在下面這個例子裏面

29
00:01:32,560 --> 00:01:35,120
我們來放一群人的年齡

30
00:01:35,120 --> 00:01:37,480
全部都是整數的型態

31
00:01:37,480 --> 00:01:39,680
在第三個List中

32
00:01:39,680 --> 00:01:42,120
放的資料型態就不一樣了

33
00:01:42,120 --> 00:01:43,219
第一筆資料是一個字串

34
00:01:44,219 --> 00:01:46,519
第二筆資料也是一個字串

35
00:01:46,519 --> 00:01:50,040
第三筆資料又是一個List的型態

36
00:01:50,040 --> 00:01:54,840
所以我們說List是可以放各種資料型態的

37
00:01:55,840 --> 00:01:59,000
這筆資料的意義是什麼呢

38
00:01:59,000 --> 00:02:02,939
我們必須在程式設計的時候賦予它意義

39
00:02:03,939 --> 00:02:05,320
他代表的是

40
00:02:05,320 --> 00:02:07,880
第0筆資料是學生的姓名

41
00:02:07,880 --> 00:02:09,380
第1筆代表的是他的學號

42
00:02:10,380 --> 00:02:14,159
接下來是他一群成績的資料

43
00:02:14,159 --> 00:02:18,659
這個在我們規劃的時候需要明確的定義

44
00:02:19,659 --> 00:02:22,459
List的新增、刪除、修改、查詢

45
00:02:23,459 --> 00:02:28,739
我們先用一個簡單的例子讓大家看一下四個功能

46
00:02:28,739 --> 00:02:31,500
在新增的部份我們可以使用append

47
00:02:32,500 --> 00:02:36,839
append後面我們會加上我們所要新增的資料內容

48
00:02:36,839 --> 00:02:41,060
remove可以刪除一筆資料

49
00:02:41,060 --> 00:02:42,899
在做修改的時候

50
00:02:42,899 --> 00:02:46,600
我們直接指定要修改資料的索引值

51
00:02:46,600 --> 00:02:48,500
例如這個地方

52
00:02:48,500 --> 00:02:49,940
A[0]=100

53
00:02:49,940 --> 00:02:52,339
本來0的位置放的是1

54
00:02:53,339 --> 00:02:56,119
修改後就會變成是100

55
00:02:56,119 --> 00:03:01,220
有時候我們也會用一些函式幫我們做資料的修改

56
00:03:02,220 --> 00:03:04,220
例如排序

57
00:03:04,220 --> 00:03:06,280
A.sort排序以後

58
00:03:07,280 --> 00:03:10,959
資料內容就會變成['b','a',2,1]

59
00:03:10,959 --> 00:03:17,060
資料在擷取的時候也是直接給一個索引值就可以得到資料

60
00:03:17,060 --> 00:03:20,260
或者是用：來做資料切片

61
00:03:21,260 --> 00:03:23,600
例如我們寫上1:

62
00:03:23,600 --> 00:03:29,339
代表的就是從1到最後面的資料整個擷取

63
00:03:30,339 --> 00:03:33,140
所以回傳的是[2,'a','b']

64
00:03:33,140 --> 00:03:35,619
接下來我們一個一個的詳細介紹

65
00:03:36,619 --> 00:03:38,940
在資料的新增方面

66
00:03:38,940 --> 00:03:41,640
我們通常會用到的三個函式是

67
00:03:41,640 --> 00:03:43,420
append、extend、insert

68
00:03:44,420 --> 00:03:51,019
append、extend都是在資料的後面去做新增

69
00:03:52,019 --> 00:03:53,440
但是這兩個又有點不太一樣

70
00:03:54,440 --> 00:03:56,500
append只是加上一個元素

71
00:03:57,500 --> 00:04:01,299
extend則是extend一個list

72
00:04:02,299 --> 00:04:04,820
例如我們在這個例子中

73
00:04:04,820 --> 00:04:07,760
students裡面是三個學生

74
00:04:07,760 --> 00:04:10,780
我們額外又宣告了一個List

75
00:04:10,780 --> 00:04:13,140
裡面放了兩個學生

76
00:04:13,140 --> 00:04:18,820
我們做append時後面是帶一個資料的內容

77
00:04:19,820 --> 00:04:21,399
當我們執行完這一行

78
00:04:22,399 --> 00:04:26,899
我們的students後面會多一比Lisa的資料

79
00:04:27,899 --> 00:04:34,000
如果使用extend後面帶的是一個list

80
00:04:34,000 --> 00:04:38,440
像jason、allen就會在這組資料的後面

81
00:04:39,440 --> 00:04:42,479
instert的話就不一定要放在後面

82
00:04:42,479 --> 00:04:45,060
我們可以給他一個索引值

83
00:04:45,060 --> 00:04:48,920
例如這邊寫上一個(0,'maggie')

84
00:04:48,920 --> 00:04:51,459
意思就是我要在0的位置加上maggie

85
00:04:52,459 --> 00:04:56,680
原來0的nick就會被往後推

86
00:04:56,680 --> 00:04:58,680
推到索引值為1的位置

87
00:04:59,680 --> 00:05:02,959
當然也可以把他放在1的地方

88
00:05:02,959 --> 00:05:07,159
後面這個參數我們現在加上的是st

89
00:05:07,159 --> 00:05:10,459
他是一個list的資料

90
00:05:10,459 --> 00:05:14,440
所以在insert的時候可以insert一個元素

91
00:05:14,440 --> 00:05:17,180
也可以insert一個list

92
00:05:17,180 --> 00:05:21,899
資料的刪除我們通常會使用remove跟pop

93
00:05:21,899 --> 00:05:24,140
比較大的差別是

94
00:05:24,140 --> 00:05:25,459
remove移除後就移除了

95
00:05:26,459 --> 00:05:31,219
pop則會把移除的資料做回傳的動作

96
00:05:32,219 --> 00:05:38,080
remove後面帶的元素(e)會移除第一個元素(e)

97
00:05:38,080 --> 00:05:40,200
在這個範例中我們要移除nick

98
00:05:41,200 --> 00:05:46,620
他就會從這組資料找到第一個nick的資料並把他移除

99
00:05:47,620 --> 00:05:50,440
pop如果我們沒有給他一個參數的話

100
00:05:51,440 --> 00:05:54,279
他就會把最後一筆資料抓出來

101
00:05:55,279 --> 00:05:59,899
而且回傳給我們做後續的應用

102
00:05:59,899 --> 00:06:03,060
我們可以在pop後面加上一個索引值

103
00:06:03,060 --> 00:06:09,899
意思就是要把那個索引值的元素移除並且回傳

104
00:06:09,899 --> 00:06:12,519
後面的資料就會往前做遞補

105
00:06:13,519 --> 00:06:17,659
排序是我們經常會使用到的資料修改

106
00:06:17,659 --> 00:06:19,399
他的語法很簡單

107
00:06:19,399 --> 00:06:22,120
我們只要用data.sort

108
00:06:22,120 --> 00:06:26,159
就可以把資料作由小到大的排序

109
00:06:27,159 --> 00:06:31,659
如果今天是想要由大到小的排序的話呢

110
00:06:31,659 --> 00:06:35,099
我們可以加上一個參數(reverse=True)

111
00:06:35,099 --> 00:06:37,719
例如我們這裡有一筆資料grade

112
00:06:37,719 --> 00:06:40,940
他的值是[12,22,99]

113
00:06:40,940 --> 00:06:43,360
我做一個sort且reverse=True

114
00:06:44,360 --> 00:06:48,800
排出來的結果就會變成[99,22,12]

115
00:06:48,800 --> 00:06:52,580
各位注意data內的資料是會做修改的

116
00:06:52,580 --> 00:06:54,200
後面我們會提到一個sorted

117
00:06:55,200 --> 00:06:57,200
他並不會改變資料內部的順序

