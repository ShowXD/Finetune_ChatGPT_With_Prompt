1
00:00:13,000 --> 00:00:16,580
大家好這節我們來跟各位介紹Tuple

2
00:00:16,580 --> 00:00:19,940
Tuple跟上一節講的List很像

3
00:00:19,940 --> 00:00:22,120
但他的資料是不能夠修改的

4
00:00:23,120 --> 00:00:25,380
他的優點是

5
00:00:25,380 --> 00:00:28,480
比起List他比較省空間速度也比較快

6
00:00:29,480 --> 00:00:34,260
因為不能修改所以可以避免程式上的失誤

7
00:00:35,260 --> 00:00:38,220
也可以做Dictionary的key

8
00:00:38,220 --> 00:00:42,100
至於dictionary會在後面的章節跟各位做介紹

9
00:00:43,100 --> 00:00:45,855
怎麼宣告一個Tuple呢

10
00:00:45,855 --> 00:00:48,405
我們來看一下跟List的比較

11
00:00:48,405 --> 00:00:53,060
List我們是用一個[中括號]來框起我們的元素

12
00:00:53,060 --> 00:00:54,300
那Tuple的話

13
00:00:54,300 --> 00:00:56,380
是用(小括號)來做表示

14
00:00:57,380 --> 00:01:00,020
我們從新增刪除修改

15
00:01:00,020 --> 00:01:03,940
查取來比較一下Tuple能做的動作

16
00:01:03,940 --> 00:01:05,925
Tuple只能做查取

17
00:01:05,925 --> 00:01:08,885
一旦已經被宣告完成了以後

18
00:01:08,885 --> 00:01:13,860
他是不能夠新增、刪除跟修改元素的

19
00:01:13,860 --> 00:01:16,140
我們實際來看一下這個程式碼

20
00:01:17,140 --> 00:01:20,700
這個地方我們宣告了兩個變數

21
00:01:20,700 --> 00:01:23,860
第一個變數是用List來建立一筆資料

22
00:01:23,860 --> 00:01:27,620
第二個是用Tuple來建立資料

23
00:01:27,620 --> 00:01:30,760
我們來執行一下

24
00:01:30,760 --> 00:01:33,480
執行後我們來觀察變數的值

25
00:01:34,480 --> 00:01:37,255
我們先把原本的資料清除

26
00:01:37,255 --> 00:01:40,165
各位可以看到這兩筆資料

27
00:01:40,165 --> 00:01:42,239
一個是List一個是Tuple

28
00:01:44,239 --> 00:01:46,825
Tuple的建立方式有幾種

29
00:01:46,825 --> 00:01:49,435
第一種我們是用一個(小括號)

30
00:01:49,435 --> 00:01:52,315
直接把他框起來

31
00:01:52,315 --> 00:01:55,555
那它可以允許不同的資料型態

32
00:01:55,555 --> 00:01:58,465
裡面可以放字串

33
00:01:58,465 --> 00:02:00,420
也可以放整數

34
00:02:00,420 --> 00:02:04,425
第二個例子則是一堆整數

35
00:02:04,425 --> 00:02:07,555
第三個是額外的一種表達方式

36
00:02:07,555 --> 00:02:10,495
就是不用(小括號)把它括起來

37
00:02:10,495 --> 00:02:13,580
而是用"逗點,"來分割

38
00:02:13,580 --> 00:02:17,380
其實這樣子也是可以的我們來執行看看

39
00:02:17,380 --> 00:02:19,699
我們先看一下型態

40
00:02:19,699 --> 00:02:24,180
執行出來的結果她是Tuple

41
00:02:25,180 --> 00:02:27,875
第四個範例的話呢

42
00:02:27,875 --> 00:02:30,835
我們是從一個已知的List

43
00:02:30,835 --> 00:02:33,514
把它做轉型成Tuple的動作

44
00:02:33,514 --> 00:02:36,340
這樣子也是可以的我們來執行看看

45
00:02:36,340 --> 00:02:40,500
tup4的值是(1,2,3,4,5)

46
00:02:41,500 --> 00:02:45,199
下面這個地方我們故意寫兩個錯誤的程式碼

47
00:02:46,199 --> 00:02:51,300
我們將tup2的位置0改成100

48
00:02:51,300 --> 00:02:53,900
原來的則是1

49
00:02:54,900 --> 00:03:01,560
我們會發現有提示一個錯誤訊息

50
00:03:01,560 --> 00:03:06,479
當然下面的append也是會產生一樣的錯誤訊息

51
00:03:07,479 --> 00:03:10,639
我們剛剛在投影片中有跟各位提到

52
00:03:10,639 --> 00:03:13,085
Tuple比較省空間

53
00:03:13,085 --> 00:03:16,064
我們就實際的來執行

54
00:03:16,064 --> 00:03:19,465
我們先import sys

55
00:03:19,465 --> 00:03:22,435
然後透過他的function

56
00:03:22,435 --> 00:03:25,220
getsizeof去獲得

57
00:03:25,220 --> 00:03:28,000
li_grade的size

58
00:03:28,000 --> 00:03:31,925
以及tu_grade的size

59
00:03:31,925 --> 00:03:34,880
印出來我們可以看到

60
00:03:34,880 --> 00:03:38,280
第一個li也就是list的size的確是比較大

61
00:03:38,280 --> 00:03:42,099
104而第二個是只有88

62
00:03:43,099 --> 00:03:46,160
因為我們這是一個很小的例子

63
00:03:46,160 --> 00:03:49,280
可以想像如果在大數據的分析上

64
00:03:49,280 --> 00:03:54,900
我們用List跟Tuple就會產生很大的差別

65
00:03:55,900 --> 00:04:00,940
第二個我們來看一下Tuple的執行會比較快

66
00:04:00,940 --> 00:04:03,944
我們這裡引用了另外一個模組

67
00:04:03,944 --> 00:04:07,085
叫做timeit

68
00:04:07,085 --> 00:04:12,380
他可以重複的執行某一個敘述句執行非常多次

69
00:04:12,380 --> 00:04:18,639
stmt則是他要執行的動作

70
00:04:18,639 --> 00:04:22,360
number則是他要執行的次數

71
00:04:22,360 --> 00:04:27,300
這裡我們用一個很大的數據來檢驗

72
00:04:27,300 --> 00:04:30,940
看執行需要多少時間

73
00:04:30,940 --> 00:04:33,735
第二個跟第一個幾乎一模一樣

74
00:04:33,735 --> 00:04:36,704
不過我們是宣告成用Tuple來執行

75
00:04:36,704 --> 00:04:39,819
那我們來看一下

76
00:04:44,819 --> 00:04:46,920
大家可以看到

77
00:04:46,920 --> 00:04:49,975
第一個我們用List需要3.2秒

78
00:04:49,975 --> 00:04:53,040
用Tuple則只需要1.0多秒

79
00:04:53,040 --> 00:04:56,440
當我們的指令越複雜的話差距就會更大

80
00:04:57,440 --> 00:05:02,000
Tuple的資料存取跟List幾乎是一模一樣的

81
00:05:03,000 --> 00:05:06,345
我們一樣是用一個[中括號]

82
00:05:06,345 --> 00:05:09,404
裡面加上一個index去取他的值

83
00:05:09,404 --> 00:05:12,305
因為tuple一樣是有順序的

84
00:05:12,305 --> 00:05:15,279
我們值型tuple[0]會回傳Nick

85
00:05:15,279 --> 00:05:18,480
這是第一個tup1

86
00:05:18,480 --> 00:05:22,860
在0這個位置的值是Nick

87
00:05:22,860 --> 00:05:27,220
要注意到我們在宣告的時候是用一個(小括號)

88
00:05:27,220 --> 00:05:31,545
所以在取值的時候不要用(小括號)

89
00:05:31,545 --> 00:05:34,699
這樣子的語法是錯誤的

90
00:05:34,699 --> 00:05:38,160
你會發現他會給你一個invalid syntax的錯誤

91
00:05:39,160 --> 00:05:42,605
正確的用法我們要去做data selection

92
00:05:42,605 --> 00:05:45,415
一樣是用一個[中括號]

93
00:05:45,415 --> 00:05:48,264
用[1:4]來去做讀取

94
00:05:48,264 --> 00:05:51,839
[-1]的話也是可以的

95
00:05:51,839 --> 00:05:54,300
我們之前常看到的function

96
00:05:54,300 --> 00:05:57,560
像是len去取得這個tuple的size

97
00:05:57,560 --> 00:06:00,920
在這個地方一樣是可以執行的

98
00:06:00,920 --> 00:06:06,699
count則是計算這筆資料出現過幾次

99
00:06:06,699 --> 00:06:10,440
count(1)因為出現1次所以結果是1

100
00:06:10,440 --> 00:06:15,740
index則是代表這筆資料是在索引值的第幾個

101
00:06:15,740 --> 00:06:18,199
結果顯示是第0個

102
00:06:18,199 --> 00:06:21,459
tuple2的1是在第0個位置

103
00:06:22,459 --> 00:06:26,139
在這個例子裡我們宣告一個List

104
00:06:26,139 --> 00:06:31,880
在這個List裡面的元素是一個二維的Tuple

105
00:06:31,880 --> 00:06:36,319
我們一樣可以對這個List做排序的動作

106
00:06:39,319 --> 00:06:45,360
排序的結果會是依照每一個tuple的大小去做排序

107
00:06:45,360 --> 00:06:48,100
因為這個tuple是二維的陣列

108
00:06:50,100 --> 00:06:55,360
二維的陣列則會用陣列裡面的第一個元素去比大小

109
00:06:56,360 --> 00:06:59,839
我們可以看到資料中最小的是10

110
00:06:59,839 --> 00:07:04,420
所以結果s2執行以後

111
00:07:04,420 --> 00:07:09,680
執行後第一個值就會是(10,40)

112
00:07:09,680 --> 00:07:11,295
因為其中10是最小的

113
00:07:11,295 --> 00:07:14,180
接下來的兩筆資料

114
00:07:14,180 --> 00:07:16,639
(20,60)還有(20,30)

115
00:07:16,639 --> 00:07:20,394
因為第一個元素都是20所以就比第二個元素

116
00:07:20,394 --> 00:07:23,524
第二個元素30比較小所以就會往前排

117
00:07:23,524 --> 00:07:26,100
排在第二個順序

118
00:07:27,100 --> 00:07:30,040
Tuple的unpacking呢

119
00:07:30,040 --> 00:07:34,639
我們在這個地方宣告一個person=一個tuple

120
00:07:34,639 --> 00:07:37,880
我們要從這個tuple去讀取他的值

121
00:07:37,880 --> 00:07:41,600
把它assign到一些變數裡面

122
00:07:41,600 --> 00:07:48,380
(sex,age,surname)=person

123
00:07:48,380 --> 00:07:51,259
這個時候就會一個蘿蔔一個坑

124
00:07:51,259 --> 00:07:53,154
對應到所對應到的變數

125
00:07:54,154 --> 00:07:57,084
那我們也可以把這個小括號省略

126
00:07:57,084 --> 00:07:59,925
直接用逗點,的方式來表達

127
00:07:59,925 --> 00:08:02,214
需要注意的就是

128
00:08:02,214 --> 00:08:05,420
本來tuple的元素有三個

129
00:08:05,420 --> 00:08:09,860
我們在做=這個unpacking的動作的時候

130
00:08:09,860 --> 00:08:13,300
也必須要用三個值去設定

131
00:08:13,300 --> 00:08:16,519
如果用兩個就會產生錯誤

132
00:08:16,519 --> 00:08:18,355
我們來實際執行看看

133
00:08:18,355 --> 00:08:21,875
就會發現有錯誤的情況發生

134
00:08:21,875 --> 00:08:25,004
以上就是對tuple的介紹

135
00:08:25,004 --> 00:08:27,380
最重要的一點就是

136
00:08:27,380 --> 00:08:30,875
tuple的速度跟空間會比較省一點

137
00:08:30,875 --> 00:08:32,000
還有資料是無法做修改的

