1
00:00:13,900 --> 00:00:18,435
大家好今天呢我們要跟大家來介紹 pandas 的資料分析

2
00:00:19,340 --> 00:00:25,145
我想 2D 的資料表的是經常被應用的一種資料處理的方式

3
00:00:25,170 --> 00:00:28,144
比方說像這裡有一個表用來記錄

4
00:00:28,169 --> 00:00:31,645
一堆水果他的價格跟數量

5
00:00:31,670 --> 00:00:36,068
蘋果它的價格是十塊錢的數量是九十箱

6
00:00:36,093 --> 00:00:40,973
那香蕉的價格是 12 數量是 87 等等的

7
00:00:41,320 --> 00:00:43,545
那這樣子的一個資料表呢

8
00:00:43,570 --> 00:00:45,795
我們把它儲存起來以後

9
00:00:45,820 --> 00:00:48,546
後續呢其實可以做很多的應用

10
00:00:48,571 --> 00:00:50,551
比方我們會去查詢說

11
00:00:50,576 --> 00:00:53,716
這個蘋果 他目前的價格是多少錢啊

12
00:00:53,881 --> 00:00:56,773
那也可以去做一些彙總資料的計算

13
00:00:56,798 --> 00:00:58,985
比方說平均的價格是多少

14
00:00:59,010 --> 00:01:01,783
標準差是多少 總產量是多少

15
00:01:01,808 --> 00:01:03,673
最高的產量是多少

16
00:01:04,046 --> 00:01:07,458
比如說那也可以呢對某一筆資料去做運算

17
00:01:07,483 --> 00:01:10,506
說蘋果的總價格是多少等等的

18
00:01:11,109 --> 00:01:15,347
所以我們就可以在這個表上面去做一些的延伸

19
00:01:15,372 --> 00:01:17,664
這個地方的話那就是小計

20
00:01:17,689 --> 00:01:21,038
這個地方是他的平均跟他的標準差

21
00:01:21,705 --> 00:01:26,946
當然我們想要用一些圖表的方式來呈現這一筆資料

22
00:01:27,089 --> 00:01:31,814
比方說這裡用圓餅圖來呈現每一個水果

23
00:01:31,839 --> 00:01:33,954
它的產量的這個比例

24
00:01:35,677 --> 00:01:40,945
這張圖呢 是用長條圖

25
00:01:40,978 --> 00:01:46,010
來比較他每一種水果它的價格跟數量的差異

26
00:01:48,483 --> 00:01:53,639
那這一個的話那就可以來表示價格跟產量之間的關係

27
00:01:53,664 --> 00:01:55,234
做一些的這個探討

28
00:01:57,479 --> 00:02:00,127
好那我想這樣子的一個功能

29
00:02:00,152 --> 00:02:04,632
其實在 excel 裡面的是可以很輕易的得到

30
00:02:04,650 --> 00:02:06,684
這個地方就是一個 excel 表

31
00:02:06,708 --> 00:02:08,936
這個資料打完了以後呢

32
00:02:08,961 --> 00:02:10,228
我們在小計這個地方喔

33
00:02:10,260 --> 00:02:13,069
只要去做一個簡單的運算

34
00:02:13,556 --> 00:02:18,441
這個小計等於價格去乘以它的數量

35
00:02:18,466 --> 00:02:19,911
乘起來

36
00:02:20,586 --> 00:02:23,595
去做一個複製就可以得到這一張表

37
00:02:23,620 --> 00:02:24,620
當然他也可以

38
00:02:24,941 --> 00:02:27,666
去做一些這個圖表的呈現

39
00:02:27,691 --> 00:02:30,417
我想這個是 excel 的這個基本功能

40
00:02:30,529 --> 00:02:34,020
我們現在用 python 用這個 pandas

41
00:02:34,155 --> 00:02:35,782
也可以達到這樣的一個效果

42
00:02:35,788 --> 00:02:41,147
我們會在往後在這個課程裡面會跟大家做詳細的介紹

43
00:02:41,172 --> 00:02:45,819
好那在介紹之前 我們必須要先認識幾個名詞

44
00:02:45,923 --> 00:02:48,063
第一個就是所謂的 column

45
00:02:48,088 --> 00:02:52,335
這樣子直的下來這個叫做 column

46
00:02:52,360 --> 00:02:54,342
有時候我們也把它叫 feature

47
00:02:54,367 --> 00:02:56,026
因為這一個表裡面

48
00:02:56,051 --> 00:03:02,129
他針對這個水果它其實有一些它的特徵

49
00:03:02,159 --> 00:03:04,621
比方說價格跟數量等等的

50
00:03:04,688 --> 00:03:06,573
所以這個又把他叫做他的feature

51
00:03:06,890 --> 00:03:08,581
那一筆一筆的資料

52
00:03:08,606 --> 00:03:10,629
我們就是說一個這個 data row

53
00:03:10,654 --> 00:03:12,613
一筆一筆的這個資料

54
00:03:14,105 --> 00:03:15,883
好那這個 pandas 如果要查

55
00:03:15,916 --> 00:03:19,749
他相關的一些 api 的應用的話

56
00:03:19,774 --> 00:03:22,439
會在這個 pandas.pydata.org

57
00:03:22,464 --> 00:03:25,542
他都有相關的資料可以查看

58
00:03:26,646 --> 00:03:28,777
好那我們就來先介紹一下

59
00:03:28,802 --> 00:03:32,392
怎麼產生一個這樣的一個資料表

60
00:03:32,685 --> 00:03:36,413
產生這個 pandas 資料呢有很多種方式

61
00:03:36,447 --> 00:03:39,138
那第一個比較簡單的就是

62
00:03:39,449 --> 00:03:42,917
透過一個 dict 去建立我這個資料表

63
00:03:42,942 --> 00:03:44,139
那我們來看一下

64
00:03:44,671 --> 00:03:46,560
我們建立了一個 dict

65
00:03:46,607 --> 00:03:50,290
這個 name 就是我們剛看到的這個column, features

66
00:03:50,401 --> 00:03:56,560
所以我有這個 apple, banana 跟 cherry 跟這個榴槤

67
00:03:58,138 --> 00:03:59,138
價格的話

68
00:03:59,163 --> 00:04:02,313
我們就是蘋果的價格是十塊錢

69
00:04:02,338 --> 00:04:04,795
banana 的價格是 12 等等的

70
00:04:04,820 --> 00:04:07,319
那這個地方是數量

71
00:04:07,344 --> 00:04:09,486
這樣子我建好了一個 dictionary

72
00:04:09,511 --> 00:04:11,541
那我們就可以透過 pd

73
00:04:11,566 --> 00:04:14,304
好這個 pd 就是 pandas 的這一個物件

74
00:04:14,486 --> 00:04:17,994
.dataframe 然後呢把這一個 f 把他帶進來

75
00:04:18,209 --> 00:04:22,054
這樣子的話就可以產生一個 dataframe 的這個物件

76
00:04:22,065 --> 00:04:23,294
我們就把他印出來看

77
00:04:23,319 --> 00:04:25,708
就可以看到這樣子的一個資料表

78
00:04:26,580 --> 00:04:27,754
那前面這個地方

79
00:04:27,779 --> 00:04:31,302
他會自動的幫我們加上一個0 1 2 3

80
00:04:31,449 --> 00:04:34,460
這就代表他的 index 他的索引值

81
00:04:34,485 --> 00:04:35,485
那我們可以

82
00:04:35,557 --> 00:04:38,985
透過這個索引值來去抓取一筆資料

83
00:04:39,509 --> 00:04:41,175
當然呢這個 index

84
00:04:41,199 --> 00:04:44,334
我們剛剛是透過系統 0 1 2 3 4

85
00:04:44,359 --> 00:04:45,759
自動來設定的

86
00:04:45,799 --> 00:04:46,799
我們也可以呢

87
00:04:46,915 --> 00:04:49,258
自己去指定他的 index

88
00:04:49,283 --> 00:04:50,263
比方說

89
00:04:50,295 --> 00:04:53,390
在這個例子裏面我們在產生

90
00:04:53,468 --> 00:04:57,019
df 這個物件時我帶了一個參數叫index

91
00:04:57,044 --> 00:04:58,517
那這個 index 呢

92
00:04:58,544 --> 00:05:00,739
是一個 list

93
00:05:00,764 --> 00:05:04,369
那這個 list 我們就直接讓他是等於  f['name']

94
00:05:04,394 --> 00:05:08,478
也就是說我是要用姓名的這一個欄位

95
00:05:08,503 --> 00:05:10,629
來當成我的這個索引值

96
00:05:10,654 --> 00:05:12,503
ok 那這樣子印出來了以後

97
00:05:12,528 --> 00:05:13,767
各位就可以看到

98
00:05:14,124 --> 00:05:16,469
這個地方已經不是 0 1 2 3 4

99
00:05:16,494 --> 00:05:19,486
而是他的這個 apple, banana 等等等的

100
00:05:19,920 --> 00:05:21,229
所以這個地方

101
00:05:21,254 --> 00:05:24,232
我們已經用他的 name 來當成這個索引值

102
00:05:25,004 --> 00:05:30,691
那我們今天的如果想要去印出某一個欄位他的

103
00:05:31,389 --> 00:05:34,694
資料的時候 我們就直接透過 df.price

104
00:05:34,869 --> 00:05:36,034
那就可以把他印出來

105
00:05:36,059 --> 00:05:37,384
所以像這個蘋果

106
00:05:37,409 --> 00:05:39,208
這個是他的index

107
00:05:39,233 --> 00:05:40,913
蘋果 價格是這樣子

108
00:05:40,938 --> 00:05:43,360
banana 價格是等於這樣子

109
00:05:44,202 --> 00:05:44,935
那接下來呢

110
00:05:44,960 --> 00:05:48,435
假設我想要去抓取某一個特別的資料的話

111
00:05:48,460 --> 00:05:50,058
我們就透過 loc

112
00:05:50,210 --> 00:05:53,192
後面這個地方是他的索引值

113
00:05:53,217 --> 00:05:54,843
所以 loc 索引值

114
00:05:54,868 --> 00:05:57,676
那這個索引值呢我們是放 apple

115
00:05:57,701 --> 00:05:58,701
所以他就會把

116
00:05:58,773 --> 00:06:00,446
這一筆資料把他抓出來

117
00:06:00,494 --> 00:06:02,716
所以這個地方我們就可以看到 name

118
00:06:02,750 --> 00:06:04,670
apple 這樣子的一筆資料

119
00:06:04,695 --> 00:06:06,114
 他就會呈現出來

120
00:06:08,631 --> 00:06:09,631
好

121
00:06:09,686 --> 00:06:14,122
那如果說我今天要抓的這個資料是兩筆以上的話

122
00:06:14,147 --> 00:06:15,147
那也沒有問題啦

123
00:06:15,172 --> 00:06:16,965
我們剛看到這個 loc

124
00:06:17,283 --> 00:06:18,719
後面呢是

125
00:06:18,791 --> 00:06:21,449
直接抓一個 index 的值

126
00:06:21,474 --> 00:06:23,140
那如果說是兩個的話

127
00:06:23,165 --> 00:06:24,957
我們就用一個 list 把他包起來

128
00:06:25,139 --> 00:06:29,148
所以就是 ['r1','r2'] 這樣子形成一個 list

129
00:06:29,267 --> 00:06:33,394
這樣子抓起來的這個資料就會是這兩筆的資料

130
00:06:33,656 --> 00:06:39,132
那另外一個就是依照他的 position 就是依照他的位置

131
00:06:39,282 --> 00:06:41,625
好像這一個的話是 0 1 2

132
00:06:41,667 --> 00:06:44,211
這是第二筆資料

133
00:06:44,236 --> 00:06:47,251
一直到第五筆資料

134
00:06:47,855 --> 00:06:52,497
所以我們就可以說是用 2:5 總共三筆資料

135
00:06:52,522 --> 00:06:55,624
所以 到時候抓起來就是這一筆資料

136
00:06:55,653 --> 00:06:57,109
那各位要注意一下

137
00:06:57,142 --> 00:07:00,910
 loc 後面呢所代的是哪個索引值

138
00:07:01,149 --> 00:07:03,998
iloc 代表的是他的 position

139
00:07:06,633 --> 00:07:10,355
好那當我們在做的資料處理的時候

140
00:07:10,376 --> 00:07:12,347
有時候我們要先把這個資料

141
00:07:12,380 --> 00:07:16,116
那先把它 show 出來看一下這個內容是什麼

142
00:07:16,342 --> 00:07:17,886
那這個資料非常的多

143
00:07:17,911 --> 00:07:19,540
你如果一下子

144
00:07:19,580 --> 00:07:23,412
跑個一萬筆出來 其實那個你看了都會眼花撩亂

145
00:07:23,453 --> 00:07:27,484
所以我們常常會先透過 df.head

146
00:07:27,509 --> 00:07:29,588
那這個 n 的話就代表幾筆

147
00:07:29,613 --> 00:07:31,162
比方說是 10 筆啦

148
00:07:31,187 --> 00:07:32,437
還是這個 5 筆啦

149
00:07:32,462 --> 00:07:35,182
我們先看一下他有哪一些欄位

150
00:07:35,207 --> 00:07:37,814
每一個值的這個特性是什麼

151
00:07:37,839 --> 00:07:38,839
可以透過 head

152
00:07:39,719 --> 00:07:43,763
那透過 tail 是去找他 n 筆的資料

153
00:07:43,788 --> 00:07:45,992
就是後面 n 筆的這個資料

154
00:07:46,017 --> 00:07:48,291
或者是呢 隨機的找幾筆

155
00:07:48,316 --> 00:07:51,613
我們先出來看一下這個資料的這個內容

156
00:07:53,764 --> 00:07:56,280
那如果說我今天呢是要

157
00:07:56,312 --> 00:08:01,266
找部分的這個欄位的話

158
00:08:01,291 --> 00:08:03,256
比方說我這裡有 c1 c2 c3

159
00:08:03,493 --> 00:08:08,207
三個欄位 可是我現在只要找 c1 跟 c2 這個欄位的時候

160
00:08:08,740 --> 00:08:10,501
那這時候我們怎麼辦呢

161
00:08:10,541 --> 00:08:11,541
我們就可以

162
00:08:11,566 --> 00:08:14,738
這樣子的一個技術是叫做 data slicing

163
00:08:14,763 --> 00:08:17,214
我們就可以用 df

164
00:08:17,239 --> 00:08:18,882
我們先看前面這個好了

165
00:08:18,907 --> 00:08:21,240
我們 df 然後一個中括號

166
00:08:21,265 --> 00:08:22,265
一個 c1

167
00:08:22,290 --> 00:08:26,116
那就代表說我只要抓 c1 的這個欄位

168
00:08:26,141 --> 00:08:30,098
或者是簡單一點就是 df.c1 這樣子也是可以的

169
00:08:30,575 --> 00:08:32,769
那如果說我一次要抓兩個欄位的話

170
00:08:32,794 --> 00:08:36,222
那一樣這個地方框起來了以後這裡面的內容

171
00:08:36,247 --> 00:08:37,516
是一個 list

172
00:08:37,541 --> 00:08:43,095
注意你不可以寫 df['c1','c2'] 這樣子他就看不懂

173
00:08:44,048 --> 00:08:46,749
接下來我們來看這個資料過濾

174
00:08:47,661 --> 00:08:54,347
我們經常會對這一筆資料上面的欄位的去做一些的篩選條件

175
00:08:54,482 --> 00:08:55,724
那這個怎麼做呢

176
00:08:55,749 --> 00:08:59,522
例如說這個 c1 代表是一個價格

177
00:08:59,547 --> 00:09:02,727
我們要找價格是大於十塊錢

178
00:09:02,752 --> 00:09:06,983
那我們就可以對這一個欄位 c1 大於十的

179
00:09:07,008 --> 00:09:08,436
 把它找出來

180
00:09:08,480 --> 00:09:11,718
這個找出來了因為它是一個布林的判斷

181
00:09:11,731 --> 00:09:15,773
所以得出來的結果他一樣會是一個 table

182
00:09:15,798 --> 00:09:20,440
那這個table裡面存放了就是這樣子 true false true 這樣的一個表

183
00:09:20,465 --> 00:09:24,087
好經過這樣子產生這個表以後

184
00:09:24,112 --> 00:09:29,933
接下來可以透過 df.loc 去找出

185
00:09:29,958 --> 00:09:32,944
某一些筆 某一些的資料

186
00:09:32,969 --> 00:09:35,197
並不是要把所有的資料列出來

187
00:09:35,222 --> 00:09:36,697
我要找某一些資料

188
00:09:36,722 --> 00:09:37,989
那哪一些資料呢

189
00:09:38,014 --> 00:09:40,418
是要根據這個 g 去篩選

190
00:09:40,444 --> 00:09:41,444
所以這個地方

191
00:09:41,566 --> 00:09:44,152
是 true 就會挑出來

192
00:09:44,197 --> 00:09:47,239
或者是這樣子我們就可以把他簡寫成

193
00:09:47,264 --> 00:09:51,129
df[g] 一樣得出這樣的結果

194
00:09:51,827 --> 00:09:55,900
當然整個我們可以把他做一個簡約的寫法

195
00:09:55,925 --> 00:09:58,904
就是 df 然後中括號了以後

196
00:09:58,929 --> 00:10:01,171
這裡面直接就是我的條件

197
00:10:01,203 --> 00:10:04,638
df.c1 他的值要大於十塊錢

198
00:10:04,663 --> 00:10:05,813
這樣子的話呢

199
00:10:05,838 --> 00:10:07,893
到時候就會列出這兩筆資料

200
00:10:07,918 --> 00:10:11,393
也就是 r1 這筆資料 r3 這筆資料

201
00:10:13,092 --> 00:10:17,388
那對資料排序也是經常我們可以做的

202
00:10:17,413 --> 00:10:20,507
我們可以透過 df.sort_values 括號

203
00:10:20,532 --> 00:10:25,948
後面加上一個 by 就是依據 c1 這個欄位來去做排序

204
00:10:28,052 --> 00:10:32,885
另外一個非常好用的東西能就是統計性的一些計算

205
00:10:32,910 --> 00:10:35,909
比方說我透過一個 df.means 的話

206
00:10:36,029 --> 00:10:38,846
他就可以把所有的欄位去做平均

207
00:10:39,645 --> 00:10:44,081
或者是說那我要針對 c1 這個欄位

208
00:10:44,106 --> 00:10:46,352
去他的平均數

209
00:10:46,377 --> 00:10:47,767
求出他的中位數

210
00:10:47,997 --> 00:10:50,877
把他做一個加總 或者說做個累加

211
00:10:50,902 --> 00:10:53,615
做這個標準差 等等都可以

212
00:10:55,101 --> 00:10:59,398
那還有一個非常方便的一個 function 叫做 describe

213
00:10:59,423 --> 00:11:01,831
df.describe 描述一下

214
00:11:02,161 --> 00:11:03,648
這一個資料表的這個內容

215
00:11:03,673 --> 00:11:05,640
他就幫助我們把他的

216
00:11:05,669 --> 00:11:10,578
數量阿 他的平均阿 標準差啦 最小的啦

217
00:11:10,611 --> 00:11:14,637
這個是四分之一點啊 這個一半的這個點啊

218
00:11:14,662 --> 00:11:18,198
還有這個後4分之1最大值

219
00:11:18,223 --> 00:11:21,532
整個資料表的都做一個概括性的這個描述

220
00:11:23,103 --> 00:11:25,467
我們也可以透過這個 group by 呢

221
00:11:25,492 --> 00:11:29,062
來幫我們去做資料的一些彙整

222
00:11:29,087 --> 00:11:31,295
例如說我這裡有一個資料表

223
00:11:31,320 --> 00:11:36,042
台中的西屯區每一坪是二十萬

224
00:11:36,075 --> 00:11:38,804
台南的新營區是這樣子

225
00:11:38,829 --> 00:11:39,987
台北等等的

226
00:11:40,136 --> 00:11:41,503
好那我們

227
00:11:41,528 --> 00:11:44,503
想要對這個資料表去做一個 group by city

228
00:11:44,528 --> 00:11:46,979
那 group by 以後它就會

229
00:11:47,155 --> 00:11:50,250
這個台中他的平均就是

230
00:11:50,576 --> 00:11:54,255
台中因為有這裡有一筆然後這個地方有兩筆

231
00:11:54,280 --> 00:11:57,755
那兩個加起來的平均就是17.3

232
00:11:57,780 --> 00:12:01,510
那這個台南是 10 台北是 45 等等的

