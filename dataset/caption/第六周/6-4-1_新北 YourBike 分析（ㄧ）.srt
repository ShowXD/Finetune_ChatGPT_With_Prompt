0
00:00:00,000 --> 00:00:13,000


1
00:00:13,700 --> 00:00:15,000
大家好這個章節呢

2
00:00:15,100 --> 00:00:20,000
我們要來講一個應用就是新北市 youbike 相關資訊應用

3
00:00:20,100 --> 00:00:27,000
那這筆資料呢我們在前面講 dictionary 的時候也曾經用過這一筆資料

4
00:00:27,000 --> 00:00:31,100
那時候我們用的資料是用 dictionary 的方式

5
00:00:31,200 --> 00:00:35,000
來讀進台中市 youbike 的資訊

6
00:00:35,100 --> 00:00:42,000
那這筆資料的結構包含了像每一個站點他會有一個代碼他的名稱

7
00:00:42,000 --> 00:00:49,000
總共有多少個停車格 那目前還有多少車子在這個 station 裡面

8
00:00:49,000 --> 00:00:54,000
還有他所在的區域、坐標等等 這樣的一筆資料

9
00:00:54,000 --> 00:00:57,000
那現在呢 我們已經學完了dataframe

10
00:00:57,000 --> 00:01:00,000
dataframe的方式再來做一遍

11
00:01:01,000 --> 00:01:05,000
那效果跟整個過程是完全不一樣的 更方便了

12
00:01:05,000 --> 00:01:14,500
那我們這一筆資料就到data.gov.tw下的交通來拿取這筆資料

13
00:01:15,000 --> 00:01:22,000
進來以後呢各位可以看到這裡有一些他欄位的描述跟之前的資料的是一樣的

14
00:01:23,000 --> 00:01:29,000
這裡有csv 跟 json 這一次的話呢 就是下載csv的這個檔案

15
00:01:29,100 --> 00:01:37,000
那 csv 是一個像 table 結構的這個檔案 所以 dataframe 就比較好處理

16
00:01:37,000 --> 00:01:42,000
雖然下載下來以後 各位看到這個密密麻麻看起來非常複雜

17
00:01:42,050 --> 00:01:47,000
可是當他呢 你把它轉換用 dataframe 去讀取的時候

18
00:01:47,050 --> 00:01:51,050
事實上這一筆資料還蠻清楚的 還蠻清楚的

19
00:01:52,000 --> 00:01:58,000
那我們要做什麼事情呢 我們來畫幾張圖就是用視覺化的方式

20
00:01:58,000 --> 00:02:01,000
來呈現好這個 youbike 的一些狀況

21
00:02:01,000 --> 00:02:06,000
例如說呢 每一個區域他有多少個 youbike 的 station

22
00:02:06,000 --> 00:02:09,000
那這個地方是我們先跑出來的結果

23
00:02:09,050 --> 00:02:12,900
各位可以看到這個板橋看來是最多的啦

24
00:02:13,000 --> 00:02:18,050
那其他像深坑區和金山區也有 但是這個數量就比較少

25
00:02:18,100 --> 00:02:25,000
那我們可以用圓餅圖的方式去呈現 那樣大家可以看到這個百分比 由小的到大的

26
00:02:25,050 --> 00:02:29,500
那其實我可以對它做一個排序

27
00:02:30,000 --> 00:02:33,000
我們還可以做什麼呢 我們還可以做分佈圖

28
00:02:33,050 --> 00:02:39,000
因為這一筆資料裡面呢 他有所為這個經度的座標還有緯度的座標

29
00:02:39,500 --> 00:02:42,100
所以我們這個東西就畫一個 scatter

30
00:02:42,500 --> 00:02:48,000
畫出整個 youbike station 分佈的這個狀況

31
00:02:49,000 --> 00:02:54,000
那右邊這張呢 是新北市的地圖 看一下中間這個地方是台北市

32
00:02:54,000 --> 00:03:00,000
所以在我們這個資料上面是沒有這一個station 這個空了一大堆

33
00:03:00,000 --> 00:03:06,000
那右邊這個地方大概是貢寮區 北邊這個地方大概是在金山區左右

34
00:03:06,000 --> 00:03:10,000
所以我們也可以畫出這樣子的圖

35
00:03:10,100 --> 00:03:15,000
那畫這些圖難不難呢 都非常的簡單 透過 dataframe

36
00:03:15,000 --> 00:03:20,050
大家可能需要三到五行 就可以把這樣子的圖 把它畫出來了

37
00:03:21,000 --> 00:03:26,000
我們也可以畫出一個借出率 借出率就是每一個 station

38
00:03:26,000 --> 00:03:29,000
他借出 youbike 的這個比例是多少

39
00:03:30,000 --> 00:03:35,000
借出的比例越多的話 代表這一個 station 是越 popular

40
00:03:35,000 --> 00:03:40,000
越多人來借用 youbike 可以看到說

41
00:03:40,000 --> 00:03:47,000
平均來看 大概都還有這個中位數的部分都來到 60、70% 左右

42
00:03:47,100 --> 00:03:49,000
那我們也可以來做什麼事呢

43
00:03:49,000 --> 00:03:54,000
我們也可以依照這個借出率的大小來繪製這個圈圈的大小

44
00:03:54,000 --> 00:03:57,900
像這地方各位看到有些圈圈是比較小一點的

45
00:03:58,000 --> 00:04:01,000
所以代表這個地方他的借出率是比較小的

46
00:04:01,000 --> 00:04:05,500
因為這個平均來看 借出率都還挺大的

47
00:04:05,600 --> 00:04:07,000
所以這個圈圈看起來都差不多

48
00:04:08,000 --> 00:04:10,500
接下來看我們的這個程式

49
00:04:10,600 --> 00:04:14,500
首先呢 我們在上面這個地方宣告了三個 function

50
00:04:14,600 --> 00:04:18,200
第一個 function 是在設定他的這個字型

51
00:04:18,300 --> 00:04:21,900
然後是 mac 版的 第二個的話是 Window 版的

52
00:04:22,000 --> 00:04:27,000
因為呢 這個 matplotlib 裡面的預設並沒有中文的字型

53
00:04:27,300 --> 00:04:30,000
所以這個地方需要處理一下

54
00:04:30,000 --> 00:04:35,000
那第三個 function 的是 init 初始化我們的這個資料

55
00:04:35,100 --> 00:04:41,000
那我們先設定一下資料的目錄是把它放在 data 下面的youbike

56
00:04:41,500 --> 00:04:47,500
youbike新北市這個csv 那設定好這個路徑以後

57
00:04:47,600 --> 00:04:52,600
我們就透過 pd.read_csv 把這筆資料把他讀進來

58
00:04:52,700 --> 00:04:56,900
然後這個地方是 file_path 就是這個值

59
00:04:57,000 --> 00:04:58,000
然後這個 header 等於 0 的意思

60
00:04:58,100 --> 00:05:03,100
就是說我會有這筆資料他是有表頭的欄位說明

61
00:05:03,200 --> 00:05:06,300
好讓我們來看一下這一筆資料

62
00:05:06,400 --> 00:05:10,000
就是這個 csv 檔 你會在第一行這個地方

63
00:05:10,100 --> 00:05:13,000
看到他會有許多這個欄位的名稱

64
00:05:13,000 --> 00:05:17,000
代表說他的表頭並不是一筆資料

65
00:05:17,000 --> 00:05:18,800
而是一個這個說明

66
00:05:19,000 --> 00:05:22,000
所以我們在這個地方必須要把 header 設為零

67
00:05:22,800 --> 00:05:26,800
接下來這個 dtype dtype 是 sno : str

68
00:05:27,000 --> 00:05:32,000
這是為什麼呢 我們再點一下這個 dataframe 的資料

69
00:05:32,200 --> 00:05:37,300
各位看到這個sno這個地方是每一個站 他的一個序號

70
00:05:37,300 --> 00:05:40,100
但是這一筆資料呢 他全部都是數字

71
00:05:40,200 --> 00:05:46,100
如果說你不強迫跟這個 pandas 講說他是一個字串的話

72
00:05:46,200 --> 00:05:49,100
他就會誤認為他是一個整數

73
00:05:49,300 --> 00:05:54,100
它是一個整數的話 等一下就會被拿去做加減乘除等的運算

74
00:05:54,200 --> 00:05:57,000
那對我們來講 這是沒什麼意義的啦

75
00:05:57,000 --> 00:06:02,000
所以我們就在這個地方特別說明他是一個字串

76
00:06:02,000 --> 00:06:06,000
那這個三個 function 的含義大概是這樣

77
00:06:06,000 --> 00:06:09,200
大家應該很容易了解 所以我們就進到我們的主程式

78
00:06:10,000 --> 00:06:12,000
首先我們先去設定一下這個字型

79
00:06:12,500 --> 00:06:15,000
然後接下來把資料讀進來

80
00:06:15,300 --> 00:06:17,800
放在 df 的 這個 dataframe

81
00:06:18,000 --> 00:06:21,000
那讀完了以後呢

82
00:06:21,000 --> 00:06:24,500
各位就可以到 Variable explorer 的這個地方

83
00:06:25,000 --> 00:06:27,000
我們先來看一下 df 的這一筆資料

84
00:06:27,100 --> 00:06:32,200
全部都被讀進來啦 那這裡就是我們剛剛提到的

85
00:06:32,700 --> 00:06:37,000
sno 它站亭的代碼 然後接下來是這個站的這個名稱

86
00:06:37,100 --> 00:06:42,200
然後 total 是多少個 多少個位置

87
00:06:42,300 --> 00:06:46,000
然後目前還有多少輛車子停在這一個station

88
00:06:47,000 --> 00:06:50,000
然後接下來這個地方是他是在哪一個區域

89
00:06:50,500 --> 00:06:53,000
這個 sarea 等一下我們會用到

90
00:06:53,100 --> 00:06:56,000
所以花一點時間來看一下

91
00:06:56,300 --> 00:06:59,000
我們點擊一下他 他會做一個排序

92
00:06:59,000 --> 00:07:01,000
所以各位可以看到說

93
00:07:01,500 --> 00:07:06,000
三峽區這個地方其實他本身就蠻多的這個 station

94
00:07:06,200 --> 00:07:10,000
三峽區 然後接下來是三重區等等的

95
00:07:10,100 --> 00:07:14,000
那各位也看到說 total 這個地方

96
00:07:14,100 --> 00:07:17,200
他都會有一些 background 的這個顏色

97
00:07:17,300 --> 00:07:20,000
這是代表說這個是數字

98
00:07:21,000 --> 00:07:23,000
那我們在 total 這個地方點一下

99
00:07:23,100 --> 00:07:26,500
你會發現他會幫我們去做一點排序

100
00:07:26,600 --> 00:07:30,200
這是16號是最小的嘛

101
00:07:30,300 --> 00:07:35,900
那比較小的數字他就用一個比較深的紅色 來去做一個表示

102
00:07:36,000 --> 00:07:39,000
那比較大的數字呢 我們先點一下

103
00:07:39,200 --> 00:07:43,000
讓它是由大而小的排序 那他就是用藍色來做一個表示

104
00:07:43,700 --> 00:07:47,000
所以這樣子的話你看這一張表就很清楚啊

105
00:07:47,100 --> 00:07:51,000
就可以看到說有顏色的代表是他是一個數字

106
00:07:51,100 --> 00:07:55,000
那這個 dataframe.read_csv

107
00:07:55,100 --> 00:07:59,000
他事實上幫我們做了很智慧的那個判讀

108
00:07:59,100 --> 00:08:03,200
看到數字自動把他當成是一個數字

109
00:08:03,400 --> 00:08:05,000
然後用這個顏色來表示

110
00:08:05,100 --> 00:08:09,000
你也可以點一下 把那個顏色把它拿掉

111
00:08:09,000 --> 00:08:12,000
其實呈現出來是比較方便的

112
00:08:12,100 --> 00:08:16,000
我們先把這個表呢 我們先不要關閉

113
00:08:16,100 --> 00:08:19,000
我們再往下來看我們的這個程式

114
00:08:19,000 --> 00:08:20,800
我們這個程式第一個呢

115
00:08:21,000 --> 00:08:25,000
我要用長條圖來呈現每一個區的這個數量

116
00:08:25,000 --> 00:08:28,000
這個一行就可以解決這一個程式碼

117
00:08:28,100 --> 00:08:29,000
要怎麼做呢

118
00:08:29,100 --> 00:08:33,300
我們會用到 groupby 這一個 function

119
00:08:33,400 --> 00:08:38,000
所以 df.groupby 就是我要用什麼東西來做分群

120
00:08:38,300 --> 00:08:43,000
我要用 sarea 就是這一個 用他的區域來去做分群

121
00:08:43,000 --> 00:08:48,000
分群完了以後 我的這個統計的 function 是什麼呢

122
00:08:48,000 --> 00:08:50,000
我需要去算他的 count

123
00:08:50,300 --> 00:08:53,500
我不是要去算他的平均 也不是要去算他的加總

124
00:08:53,600 --> 00:08:55,000
我是要去算他的數量

125
00:08:55,200 --> 00:09:00,000
所以就是我要去算他說三峽有多少筆

126
00:09:00,000 --> 00:09:02,000
有多少筆資料 他是屬於三峽的

127
00:09:02,000 --> 00:09:05,300
多少筆的是屬於三重的 所以是 count

128
00:09:05,500 --> 00:09:09,100
那當你這樣子 count 做完了以後這裡所有的欄位呢

129
00:09:09,200 --> 00:09:14,200
他都會去儲存這個 count 的這個數字

130
00:09:14,300 --> 00:09:17,500
那包含的像這裡的 sno 他都會儲存

131
00:09:17,800 --> 00:09:19,100
這個數量的這一個數字

132
00:09:20,000 --> 00:09:23,300
所以呢我們去取得 sno 這一個值的時候

133
00:09:23,400 --> 00:09:28,000
我們取到的這個資料就是他的數量啊

134
00:09:28,000 --> 00:09:33,000
然後接下來再透過 plot.bar 就可以把這個長條圖把他秀出來

135
00:09:33,300 --> 00:09:37,500
後面的就帶一個參數 figsize = (10,10)

136
00:09:37,600 --> 00:09:40,000
來去用他的這個大小

137
00:09:40,300 --> 00:09:43,200
那我們來執行下這一行的程式碼

138
00:09:44,000 --> 00:09:46,000
Ok 那就已經呈現出來了

139
00:09:46,000 --> 00:09:51,000
我的 x 軸就是他的這個名稱

140
00:09:51,100 --> 00:09:54,000
然後他的 y 軸 是我分群

141
00:09:54,000 --> 00:09:58,000
分群了以後他的這個 index

142
00:09:58,100 --> 00:10:01,000
主要的資料就是他的sarea

143
00:10:01,100 --> 00:10:06,000
y 軸是取 sno 這個值的 count

144
00:10:06,500 --> 00:10:09,000
所以就可以呈現出這樣子的一個結果

145
00:10:10,000 --> 00:10:14,900
接下來呢我們稍微修改一下把剛剛的這個一行的這個指令呢

146
00:10:15,000 --> 00:10:19,000
把它做一下修改 讓他們可以去做這個排序

147
00:10:19,100 --> 00:10:24,000
做排序 那程式碼呢 我們也把它拆解成幾個步驟來進行

148
00:10:24,000 --> 00:10:26,000
首先我們一樣是透過 groupby

149
00:10:26,100 --> 00:10:29,000
sarea 去做 groupby

150
00:10:29,000 --> 00:10:34,000
得到的結果是 count 取 sno 的這一個值

151
00:10:34,000 --> 00:10:36,000
這樣子完了以後呢

152
00:10:36,200 --> 00:10:39,000
我們把他去做一個那個 rename 的這個動作 為什麼呢

153
00:10:39,500 --> 00:10:42,000
為什麼要去做 rename 呢 我先執行一次給大家看

154
00:10:42,300 --> 00:10:47,000
執行完了以後我們要看這個 Variable explorer

155
00:10:48,000 --> 00:10:50,000
那我們現在是把它儲存在 station count 裡面

156
00:10:50,100 --> 00:10:52,000
好那我們等一下這個 station count

157
00:10:53,200 --> 00:10:57,000
ok 那各位的確可以看到就是三峽區有十七個

158
00:10:57,300 --> 00:11:00,000
三重區有六十二個等等...等等...

159
00:11:00,000 --> 00:11:05,000
所以說這個資料真的就是區域內有多少個這個 station

160
00:11:05,000 --> 00:11:08,000
但是呢 他這個欄位名稱叫 sno

161
00:11:08,000 --> 00:11:11,000
事實上 sno 是他序號的意思

162
00:11:11,000 --> 00:11:13,000
這個資料是對的

163
00:11:13,000 --> 00:11:16,000
但是這個欄位的名稱並不太好

164
00:11:16,000 --> 00:11:18,200
所以呢我們把它做一下這個 rename

165
00:11:18,300 --> 00:11:22,000
我們就是呼叫 rename 的這個 function

166
00:11:22,300 --> 00:11:25,000
那怎麼 rename 呢 我們用 colors 等於

167
00:11:25,100 --> 00:11:27,000
這樣來去做一個 rename

168
00:11:27,000 --> 00:11:29,000
所以這個地方是一個 dictionary 嘛

169
00:11:29,000 --> 00:11:34,000
我們是要把 sno rename 成 count 這個數量

170
00:11:34,200 --> 00:11:38,200
當然你可以 rename 非常多啦 所以他是用一個 dictionary 的方式

171
00:11:38,300 --> 00:11:40,200
讓我們來去做表達

172
00:11:40,500 --> 00:11:44,000
那這樣的結果完了以後呢

173
00:11:44,000 --> 00:11:47,000
我們就直接把它儲存在 station count 裡面

174
00:11:47,000 --> 00:11:50,000
而不是再回傳給另外一個變數

175
00:11:50,300 --> 00:11:53,000
所以這個地方我們寫 inplace 等於 True

176
00:11:53,200 --> 00:11:56,000
就代表說在原來的地方做這個修改

177
00:11:56,300 --> 00:12:00,300
那我們再把這一行 把他執行一下

178
00:12:00,600 --> 00:12:02,000
執行完了以後呢

179
00:12:02,000 --> 00:12:05,000
我們再來看一下這個 station count

180
00:12:05,500 --> 00:12:06,000
各位就可以看到說這個地方

181
00:12:06,000 --> 00:12:10,000
欄位的名稱做了一下這個修改了

182
00:12:10,300 --> 00:12:14,000
這把他關掉 這時候呢我們去做一個排序

183
00:12:14,000 --> 00:12:16,300
就是直接 sort_values

184
00:12:16,600 --> 00:12:20,000
然後 by 等於 count  就是依照 count 來做排序

185
00:12:20,300 --> 00:12:24,000
排序完的結果呢 我們要把他丟到 staton count

186
00:12:24,100 --> 00:12:27,000
ok 那我們再把他做一個執行

187
00:12:27,100 --> 00:12:30,700
那執行完了以後呢 我們再來看一下

188
00:12:30,800 --> 00:12:34,000
這時候你就排序 由小到大排序

189
00:12:34,100 --> 00:12:37,000
所以這個資料是從 2 一直到 89

190
00:12:37,100 --> 00:12:40,900
再把他關掉 那有了這樣子的一個資料以後

191
00:12:41,000 --> 00:12:43,000
接下來我要去畫這個

192
00:12:43,500 --> 00:12:46,000
他的 bar chart 就容易了

193
00:12:46,500 --> 00:12:49,000
跟剛剛的這個指令幾乎是一樣的

194
00:12:53,000 --> 00:12:56,000
執行完 這樣跑出來的話

195
00:12:56,100 --> 00:12:59,900
就是由小而大的這樣的一筆資料了

