1
00:00:11,000 --> 00:00:13,460


2
00:00:13,460 --> 00:00:18,200
在上一個小節中我們跟各位介紹程式的執行流程

3
00:00:18,200 --> 00:00:22,320
主要有三種:循序的執行、分支跟迴圈

4
00:00:22,320 --> 00:00:28,220
分支就是程式的執行過程中有一些的條件判斷

5
00:00:28,220 --> 00:00:32,340
當它是True或是False的時候會執行不同的程式碼

6
00:00:33,340 --> 00:00:36,700
那這一小節我們來介紹迴圈

7
00:00:36,700 --> 00:00:41,200
迴圈就是會有一段的程式碼重複執行

8
00:00:41,200 --> 00:00:45,900
直到它某一些條件不再滿足

9
00:00:45,900 --> 00:00:54,079
我們直接用一個小例子跟各位說明這個迴圈的重要性跟它的語法

10
00:00:54,079 --> 00:00:58,540
假設我們今天要做一個數值的累加

11
00:00:58,540 --> 00:01:01,120
比發說1加到N

12
00:01:01,120 --> 00:01:03,240
那我們可以這樣的寫法

13
00:01:03,240 --> 00:01:06,860
sum等於1+2+3一直加到N

14
00:01:06,860 --> 00:01:10,140
假設我們N的值是等於5

15
00:01:10,140 --> 00:01:12,180
那我們就可以這樣執行

16
00:01:13,180 --> 00:01:18,400
這個程式當然我們可以很方便的執行出來

17
00:01:18,400 --> 00:01:20,459
各位看一下右上角這個地方

18
00:01:20,459 --> 00:01:22,739
sum的值就是等於15

19
00:01:22,739 --> 00:01:27,840
可是各位可以想像如果我這個值要一直累加到100的話

20
00:01:27,840 --> 00:01:32,680
那我就要一直寫 +6 +7一直寫一直寫加到100

21
00:01:32,680 --> 00:01:35,420
那這是不太可能的事情

22
00:01:35,420 --> 00:01:42,540
所以我們必須要用電腦程式的思考方式來解決這類問題

23
00:01:42,540 --> 00:01:45,480
那我們來看一下第二種的寫法

24
00:01:45,480 --> 00:01:48,220
我們就先宣告2個變數

25
00:01:48,220 --> 00:01:51,620
第一個變數是sum、第二個變數是x

26
00:01:51,620 --> 00:01:55,680
也就是我每一次要累加的那個值

27
00:01:55,680 --> 00:02:03,500
那這個值會在程式執行的過程中一直做累加的動作

28
00:02:03,500 --> 00:02:07,060
我們看一下，把程式拆解成這樣

29
00:02:07,060 --> 00:02:11,420
一開始sum跟x分別是0跟1

30
00:02:11,420 --> 00:02:17,280
接下來做一個sum=sum+x

31
00:02:17,280 --> 00:02:21,000
這時候sum的值就會等於1，我們來執行一下

32
00:02:23,000 --> 00:02:27,800
各位可以看到右上角，這時候sum跟x的值都是等於1

33
00:02:27,800 --> 00:02:31,539
接下來把x的值+1

34
00:02:32,539 --> 00:02:36,880
x就會變成2

35
00:02:36,880 --> 00:02:40,000
然後，繼續讓sum加上x

36
00:02:41,000 --> 00:02:45,080
這時候sum就會變成1+2，它代表的含意

37
00:02:45,080 --> 00:02:50,660
因為這個sum的值就是前面的sum加上x

38
00:02:50,660 --> 00:02:53,419
那sum+x就是0+1

39
00:02:53,419 --> 00:02:56,340
所以當我執行這一行的時候

40
00:02:56,340 --> 00:03:01,520
相當於1+2這樣的結果

41
00:03:01,520 --> 00:03:02,940
那我們再往下推進

42
00:03:02,940 --> 00:03:05,960
每一次都把x+1

43
00:03:05,960 --> 00:03:08,060
然後sum等於sum+x

44
00:03:09,060 --> 00:03:14,360
你就會發現，sum跟x一直在做變化

45
00:03:14,360 --> 00:03:18,280
當我一直累加到x等於5的時候

46
00:03:18,280 --> 00:03:23,360
這時候x的值是等於5，sum的值就等於15

47
00:03:23,360 --> 00:03:26,080
然後我們把結果印出來

48
00:03:26,080 --> 00:03:28,180
我們發現答案一樣是等於15

49
00:03:29,180 --> 00:03:32,539
這樣的寫法當然還是非常的繁瑣

50
00:03:32,539 --> 00:03:34,800
因為我要加到100的時候

51
00:03:34,800 --> 00:03:39,979
我這2行的指令也是要一直重複

52
00:03:39,979 --> 00:03:44,240
但是各位可能已經觀察出它有趣的地方

53
00:03:44,240 --> 00:03:49,259
就是每一次我執行的程式碼事實上是一樣的

54
00:03:49,259 --> 00:03:52,780
都是這2行程式碼一直做重複

55
00:03:52,780 --> 00:03:54,720
重複了5遍

56
00:03:54,720 --> 00:03:57,259
它就會達到這樣子的效果

57
00:03:57,259 --> 00:04:00,740
所以這個地方就會帶出我們的for迴圈

58
00:04:00,740 --> 00:04:05,599
上面的程式碼其實我們可以精簡成這個樣子

59
00:04:05,599 --> 00:04:08,680
sum等於0、x等於1

60
00:04:08,680 --> 00:04:11,655
當x小於等於5的時候

61
00:04:11,655 --> 00:04:14,634
我一直重複執行這樣子的動作

62
00:04:14,634 --> 00:04:17,860
就是sum=sum+x、x=x+1

63
00:04:17,860 --> 00:04:23,460
值到x不再滿足小於等於5這個條件

64
00:04:23,460 --> 00:04:25,380
這樣子它就會停止

65
00:04:25,380 --> 00:04:28,399
我們可以再來執行一遍看看

66
00:04:28,399 --> 00:04:31,560
跑出來的結果一樣是等於15

67
00:04:31,560 --> 00:04:35,680
在中間的過程中，這個迴圈一直在跑

68
00:04:35,680 --> 00:04:42,800
它跑的效果相當於上述的程式碼，它跑的效果是一樣的

69
00:04:42,800 --> 00:04:46,060
只是，這樣子寫來的精簡很多

70
00:04:46,060 --> 00:04:49,519
甚至於現在要改成加到100

71
00:04:49,519 --> 00:04:52,620
我只要在這個地方稍微動一下手腳

72
00:04:53,620 --> 00:04:57,920
執行它，這時候sum的結果就會是5050了

73
00:04:59,920 --> 00:05:02,625
我們再來看一個while的例子

74
00:05:02,625 --> 00:05:05,625
這個例子是要輸入一群成績

75
00:05:05,625 --> 00:05:08,805
值到輸入的成績是-999

76
00:05:08,805 --> 00:05:11,060
的時後就停止

77
00:05:11,060 --> 00:05:14,480
因為不可能會有人的成績是-999

78
00:05:14,480 --> 00:05:19,819
所以我們用這個假的成績做為停止的條件

79
00:05:19,819 --> 00:05:23,459
最後我們會輸出成績的總合

80
00:05:23,459 --> 00:05:26,959
那現在我們已經有一點經驗

81
00:05:26,959 --> 00:05:32,720
我們應該會用while的迴圈做累加的動作來簡化整個程式

82
00:05:32,720 --> 00:05:36,380
這一個程式應該會用到input

83
00:05:36,380 --> 00:05:38,699
input來輸入你的成績

84
00:05:38,699 --> 00:05:40,899
然後轉換成整數以後

85
00:05:40,899 --> 00:05:42,639
把它存到grade

86
00:05:42,639 --> 00:05:49,040
另外我需要一個變數來存現在累加的值是多少

87
00:05:49,040 --> 00:05:51,959
所以我們就完成這樣的程式

88
00:05:51,959 --> 00:05:55,040
當grade還不是等於-999的時候

89
00:05:56,040 --> 00:06:00,519
我們就進到這個迴圈裡面，要求你輸入你的成績

90
00:06:00,519 --> 00:06:03,399
輸入完以後我就做一個累加

91
00:06:03,399 --> 00:06:07,360
值到分數是等於-999的時候做停止

92
00:06:07,360 --> 00:06:11,199
所以這看起來好像非常的直覺

93
00:06:11,199 --> 00:06:13,459
那我們來實際執行一下

94
00:06:15,459 --> 00:06:18,579
執行以後它會要求我們的成績

95
00:06:18,579 --> 00:06:20,800
第一次假設是100分

96
00:06:20,800 --> 00:06:22,720
第二次是20分

97
00:06:22,720 --> 00:06:26,380
第三次假設已經沒有了就寫上-999

98
00:06:26,380 --> 00:06:27,699
按一下enter

99
00:06:27,699 --> 00:06:33,680
結果呢，total的分數竟然是-879

100
00:06:33,680 --> 00:06:35,579
那一定是哪個地方錯了

101
00:06:35,579 --> 00:06:39,339
我們再回過頭來看一下程式碼

102
00:06:39,339 --> 00:06:41,160
原因就出在

103
00:06:41,160 --> 00:06:45,319
我們輸入的成績是-999以後

104
00:06:45,319 --> 00:06:48,000
它會先在這個地方做一個加總的動作

105
00:06:49,000 --> 00:06:50,860
然後迴圈回到這個地方

106
00:06:50,860 --> 00:06:53,660
它等於-999這個時侯才跳開

107
00:06:53,660 --> 00:06:57,600
但sum已經被累加了

108
00:06:57,600 --> 00:07:00,639
那我們解決有2種方法

109
00:07:00,639 --> 00:07:08,399
第一個就是把它加(-999)的值把它減回來

110
00:07:08,399 --> 00:07:12,240
再把它加上999

111
00:07:12,240 --> 00:07:14,660
這樣的結果應該就會對了

112
00:07:14,660 --> 00:07:16,399
我們再來執行一次看看

113
00:07:16,399 --> 00:07:19,959
第一次的成績一樣用剛剛的100分

114
00:07:19,959 --> 00:07:22,380
20分、-999

115
00:07:22,380 --> 00:07:25,959
Enter 這時候總分是120分

116
00:07:25,959 --> 00:07:27,800
這樣子就對了

117
00:07:27,800 --> 00:07:32,880
第二種解決方法我們讓這2行的程式碼做對調

118
00:07:32,880 --> 00:07:36,480
也就是先讓sum等於sum加上grade

119
00:07:36,480 --> 00:07:40,060
然後再去做輸入

120
00:07:40,060 --> 00:07:43,959
雖然我們直覺是先做輸入再加總

121
00:07:43,959 --> 00:07:46,759
可是在這個程式的邏輯上

122
00:07:46,759 --> 00:07:49,680
先對sum做加總

123
00:07:49,680 --> 00:07:53,180
等它輸入-999的時候就會跳開

124
00:07:53,180 --> 00:07:55,000
就不會做加總的動作

