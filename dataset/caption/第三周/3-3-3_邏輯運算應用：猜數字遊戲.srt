1
00:00:00,000 --> 00:00:02,560


2
00:00:13,760 --> 00:00:18,220
大家好這節我們來設計一個猜數字的遊戲

3
00:00:19,220 --> 00:00:25,220
首先我們讓電腦隨機的產生一個數字 我們把它存在cmp裡面

4
00:00:26,220 --> 00:00:30,040
接著我們請求使用者做輸入的動作

5
00:00:30,040 --> 00:00:32,600
然後把這個值存在guess裡面

6
00:00:32,600 --> 00:00:38,360
那我們會做一個判斷檢查使用者到底有沒有符合格式

7
00:00:38,360 --> 00:00:39,239
必須要是一個number

8
00:00:40,239 --> 00:00:46,840
如果是輸入英文字的話它就會錯誤

9
00:00:46,840 --> 00:00:48,820
所以會在這個迴圈裡一直走

10
00:00:49,820 --> 00:00:55,060
直到輸入是一個數字以後我們會去做比較

11
00:00:55,060 --> 00:01:01,080
如果這兩個數字是一樣的那就恭喜你猜對了

12
00:01:01,080 --> 00:01:06,920
如果錯誤我們會再來檢查cmp如果大於guess

13
00:01:06,920 --> 00:01:12,900
那代表說猜得太低了 就會提示說猜高一點

14
00:01:13,900 --> 00:01:20,000
如果是False的話 就代表猜得太高了

15
00:01:20,000 --> 00:01:23,400
所以這時候就會提示猜低一點

16
00:01:23,400 --> 00:01:28,920
在這個迴圈裡會一直做輸入直到使用者猜對為止

17
00:01:28,920 --> 00:01:31,519
那我們來看看這個程式怎麼寫

18
00:01:32,519 --> 00:01:35,219
我們先來看第一版的做法

19
00:01:36,219 --> 00:01:39,980
這版事實上有一個很大的Error會造成無窮迴圈

20
00:01:39,980 --> 00:01:47,460
不過我們先順著講出來看大家能不能發現哪個地方出錯了

21
00:01:47,460 --> 00:01:51,980
首先我們要先讓電腦去產生一個數字

22
00:01:51,980 --> 00:01:55,880
這個數字是介於1到100之間

23
00:01:55,880 --> 00:01:58,840
我們import random這個模組

24
00:01:58,840 --> 00:02:03,380
呼叫random裡面有一個function叫做randomint

25
00:02:04,380 --> 00:02:08,840
就是一個隨機的 整數然後介於1到100之間

26
00:02:08,840 --> 00:02:11,140
我們把它存在cmp裡面

27
00:02:11,140 --> 00:02:16,420
接著我們就請使用者輸入1到100之間的號碼

28
00:02:17,420 --> 00:02:21,519
當然我們要判斷一下這個數字是不是number

29
00:02:21,519 --> 00:02:23,440
是不是一個整數

30
00:02:23,440 --> 00:02:26,519
所以我們在這邊寫一個while not

31
00:02:27,519 --> 00:02:35,100
當guess不是一個int的時候代表是錯的

32
00:02:35,100 --> 00:02:39,040
所以我們就請他再重新做輸入的動作

33
00:02:39,040 --> 00:02:42,500
這時候我們會提示它是一個錯誤的輸入

34
00:02:42,500 --> 00:02:45,119
請再input一個number

35
00:02:45,119 --> 00:02:49,720
所以這個迴圈就會一直跑到使用者輸入對為止

36
00:02:49,720 --> 00:02:51,399
我們再往下走

37
00:02:51,399 --> 00:02:54,260
這時候我們做一個型態的轉換

38
00:02:54,260 --> 00:03:01,299
因為input回傳的一定是string的型態

39
00:03:01,299 --> 00:03:05,500
所以我們會把它的型態轉成整數

40
00:03:05,500 --> 00:03:09,760
接下來去判斷說有沒有介於1到100

41
00:03:09,760 --> 00:03:12,880
如果不是則又是一個迴圈

42
00:03:12,880 --> 00:03:18,700
請求使用者輸入的數字是介於這個範圍內才會往下走

43
00:03:18,700 --> 00:03:21,440
接下來去判斷有沒有猜對

44
00:03:21,440 --> 00:03:24,600
提示要猜高或是猜低

45
00:03:25,600 --> 00:03:33,920
不知道大家有沒有看出這個程式其實是有一個滿大的錯誤

46
00:03:33,920 --> 00:03:37,380
答案就是這個isinstance

47
00:03:37,380 --> 00:03:46,880
因為isinstance這個function是用來檢驗後面這個變數型態是不是屬於這個型態

48
00:03:46,880 --> 00:03:53,600
因為guess是用來接input的回傳值

49
00:03:53,600 --> 00:03:56,940
它必然是str的型態

50
00:03:56,940 --> 00:04:03,860
所以isinstance(guess,int)這個回傳永遠是False

51
00:04:03,860 --> 00:04:10,360
而not false就會是True所以這個while的迴圈都會是True

52
00:04:11,360 --> 00:04:17,260
我們的程式就會在這個無窮迴圈一直繞不出來

53
00:04:17,260 --> 00:04:22,839
所以我們第一版的程式是錯的

54
00:04:22,839 --> 00:04:29,000
那我們來看一下改良後的第二版程式

55
00:04:29,000 --> 00:04:37,440
我們是呼叫一個function檢查字串是不是數字

56
00:04:37,440 --> 00:04:39,979
這個function叫做.isdigit

57
00:04:39,979 --> 00:04:46,399
如果是一個數字的話就會回傳True

58
00:04:46,399 --> 00:04:54,659
所以我們判斷說如果它不是一個digit就要求它不斷輸入

59
00:04:54,659 --> 00:04:57,500
如果是的話就會繼續往下走

60
00:04:57,500 --> 00:05:03,479
這時候去做一個轉換型態的動作把它轉成int

61
00:05:03,479 --> 00:05:07,920
然後去判斷是不是介於1到100之間

62
00:05:07,920 --> 00:05:14,399
當然我們目前是如果使用者輸入錯要讓它進來迴圈

63
00:05:14,399 --> 00:05:16,899
所以這邊顛倒著寫

64
00:05:16,899 --> 00:05:23,080
當guess>100或是<1都是錯的

65
00:05:23,080 --> 00:05:25,560
所以我們就進入到迴圈裡面

66
00:05:25,560 --> 00:05:28,019
要求使用者再去做一個輸入的動作

67
00:05:28,019 --> 00:05:30,360
那如果輸入對了就繼續往下走

68
00:05:31,360 --> 00:05:37,899
去判斷它有沒有猜對提示它高一點或是低一點

69
00:05:37,899 --> 00:05:43,560
這個程式雖然不會造成無窮迴圈但是一樣是有錯誤的

70
00:05:44,560 --> 00:05:49,899
因為即便我們在這個地方是輸入對的

71
00:05:49,899 --> 00:05:57,159
我們先讓程式跑到33行這個地方來看看

72
00:05:57,159 --> 00:05:58,500
我們輸入一個數字

73
00:05:58,500 --> 00:06:04,000
假設我們現在寫ABC在這邊必然是錯誤的

74
00:06:04,000 --> 00:06:09,019
這個迴圈就會要求我們重新輸入

75
00:06:09,019 --> 00:06:11,539
這時候我們輸入一個正確的假設23

76
00:06:12,539 --> 00:06:20,019
這時候程式碼就會跳離迴圈到這邊來

77
00:06:20,019 --> 00:06:24,500
跑到這邊以後呢我們繼續往下走

78
00:06:26,500 --> 00:06:32,580
這時候我們還不知道是猜對或是猜錯

79
00:06:33,580 --> 00:06:37,599
不過現在是符合了1到100之間

80
00:06:37,599 --> 00:06:41,539
所以也跳出這個迴圈讓我們繼續往下走

81
00:06:42,539 --> 00:06:47,659
結果他要我們猜一個比較大的數字

82
00:06:47,659 --> 00:06:49,959
可是系統已經跑完了

83
00:06:49,959 --> 00:06:56,060
它並沒有跑回迴圈裡叫我們再做輸入的動作

84
00:06:56,060 --> 00:06:58,479
所以這個程式其實是不太正確的

85
00:06:59,479 --> 00:07:03,860
相同的問題在36行這個地方也會發生

86
00:07:03,860 --> 00:07:10,760
因為我們檢驗使用者如果輸入的範圍不是1到100之間

87
00:07:10,760 --> 00:07:18,959
在請求做重新輸入的時候其實沒有檢查是不是一個digit

88
00:07:20,959 --> 00:07:31,080
也許這時候它又輸入了ABC會造成錯誤導致程式跳離開

89
00:07:31,080 --> 00:07:32,899
所以這時候又沒有檢查

90
00:07:32,899 --> 00:07:36,339
所以我們要怎麼改善這隻程式呢

91
00:07:36,339 --> 00:07:37,459
我們來看一下第三個版本

92
00:07:38,459 --> 00:07:44,000
在第三個版本我們吧while迴圈放在最外面

93
00:07:44,000 --> 00:07:45,360
這才是一個對的做法

94
00:07:46,360 --> 00:07:52,760
因為我們在這個程式裡面檢查了三四樣的東西

95
00:07:52,760 --> 00:07:54,760
看他是不是一個數字

96
00:07:54,760 --> 00:07:57,260
看他是不是介於1到100之間

97
00:07:58,260 --> 00:08:02,539
看它的數字有沒有猜對

98
00:08:02,539 --> 00:08:08,500
任何一個只要是不滿足的 迴圈都不會停止

99
00:08:08,500 --> 00:08:12,000
直到我猜對了以後

100
00:08:12,000 --> 00:08:16,320
我在這邊的把correct值設為True

101
00:08:16,320 --> 00:08:17,479
然後回到這個迴圈

102
00:08:18,479 --> 00:08:21,300
因為correct已經變成True了

103
00:08:22,300 --> 00:08:26,099
所以not  true這裡變成False就不會進來迴圈

104
00:08:26,099 --> 00:08:28,099
這時候程式才是一個結束

105
00:08:28,099 --> 00:08:31,300
所以這個地方我們設了一個變數correct

106
00:08:31,300 --> 00:08:32,479
也就是正確

107
00:08:32,479 --> 00:08:35,080
然後一開始把它設為False

108
00:08:35,080 --> 00:08:38,339
所以程式碼一定會進到這個迴圈裡面

109
00:08:39,339 --> 00:08:41,800
那我們先去請他做一個輸入

110
00:08:41,800 --> 00:08:43,060
你會發現呢

111
00:08:43,060 --> 00:08:50,759
在這個新的版本輸入只有在第55行

112
00:08:50,759 --> 00:08:52,700
這才是一個對的做法

113
00:08:52,700 --> 00:08:56,379
輸入完了以後呢我們檢查它是不是digit

114
00:08:57,379 --> 00:09:03,339
如果他不是一個digit的話我們就提示它一定要是數字

115
00:09:03,339 --> 00:09:05,219
然後就做continue

116
00:09:05,219 --> 00:09:09,680
continue是說下面就沒什麼好比較的了

117
00:09:09,680 --> 00:09:13,859
因為它本身都不是一個數字所以也沒有什麼好檢查

118
00:09:13,859 --> 00:09:15,520
就直接跳到下一個迴圈

119
00:09:15,520 --> 00:09:17,239
請你再重新做輸入

120
00:09:18,239 --> 00:09:21,560
如果下一次輸入對了是個digit

121
00:09:21,560 --> 00:09:24,160
那它做一個型態轉換之後

122
00:09:24,160 --> 00:09:28,080
再去檢查數值有沒有在範圍裡面

123
00:09:28,080 --> 00:09:33,520
如果沒有的話我們就提示一定要在1到100間

124
00:09:33,520 --> 00:09:36,099
然後又continue了 下面就沒什麼好比較了

125
00:09:37,099 --> 00:09:40,979
如果說範圍是對的話呢

126
00:09:40,979 --> 00:09:43,859
那我們就看看他是不是猜對了

127
00:09:43,859 --> 00:09:46,540
猜對的話我們就把correct設為True

128
00:09:46,540 --> 00:09:48,479
否則的話

129
00:09:48,479 --> 00:09:52,459
做出一個提示以後因為correct沒有被修改到

130
00:09:52,459 --> 00:09:53,940
所以它還是False

131
00:09:53,940 --> 00:09:56,560
這個迴圈就會一而再再而三的執行

132
00:09:57,560 --> 00:10:00,920
這雖然是一個小小的練習

133
00:10:00,920 --> 00:10:04,339
可是大家自己試試看

134
00:10:04,339 --> 00:10:07,200
在不看這個解答的情況下自己練習一遍

