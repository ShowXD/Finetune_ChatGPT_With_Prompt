1
00:00:13,719 --> 00:00:17,979
今天要來介紹一個很古老、很有趣的益智遊戲

2
00:00:17,979 --> 00:00:19,399
叫做河內塔

3
00:00:19,399 --> 00:00:21,719
這個遊戲是這麼玩的

4
00:00:21,719 --> 00:00:26,539
我們想要把 A 柱上的 3 個方塊

5
00:00:26,539 --> 00:00:30,219
搬移到 C 柱這個地方

6
00:00:30,219 --> 00:00:32,219
但中間有一些規則

7
00:00:32,219 --> 00:00:34,579
就是一次只能搬一個

8
00:00:34,579 --> 00:00:37,139
而且搬移的過程中

9
00:00:37,140 --> 00:00:39,980
不能夠大的去壓小的

10
00:00:39,980 --> 00:00:41,040
例如說

11
00:00:41,040 --> 00:00:43,820
我們一次要把 1、2 搬移到 B

12
00:00:43,819 --> 00:00:44,959
這樣是不行的

13
00:00:44,959 --> 00:00:46,840
一次只能搬一個

14
00:00:46,840 --> 00:00:49,300
或者是把 1 搬到 B

15
00:00:49,300 --> 00:00:51,360
又把 2 搬到 B

16
00:00:51,359 --> 00:00:54,519
這時候會造成大的壓小的

17
00:00:54,520 --> 00:00:55,800
這也不行

18
00:00:57,040 --> 00:00:58,180
那要怎麼辦呢

19
00:00:58,179 --> 00:01:02,700
一時間也覺得好像不是那麼容易的一個問題

20
00:01:04,300 --> 00:01:06,500
把這個問題做一下簡化

21
00:01:06,499 --> 00:01:08,499
我們先來搬移一個

22
00:01:08,499 --> 00:01:12,020
兩個 block 的這個問題

23
00:01:12,020 --> 00:01:14,120
那把 1、2 搬到 C

24
00:01:14,120 --> 00:01:16,120
而且符合這個條件

25
00:01:16,120 --> 00:01:17,960
那就輕鬆多了

26
00:01:17,960 --> 00:01:20,860
我們先把 1 搬到 B

27
00:01:20,859 --> 00:01:23,499
接著把 2 搬到 C

28
00:01:24,340 --> 00:01:27,999
這時候 B 的上面會有個 1

29
00:01:27,999 --> 00:01:29,999
再把 1 搬到 C

30
00:01:29,999 --> 00:01:32,459
這樣就解決了我們的問題

31
00:01:33,719 --> 00:01:34,260
所以呢

32
00:01:34,260 --> 00:01:36,020
在這個過程中

33
00:01:36,019 --> 00:01:38,919
說 A 是我的起始的柱子

34
00:01:39,779 --> 00:01:42,040
C 是我目的的柱子

35
00:01:42,040 --> 00:01:44,820
B 就是我輔助的柱子

36
00:01:45,359 --> 00:01:47,200
有了這樣一個概念

37
00:01:47,200 --> 00:01:48,240
我們再來看看

38
00:01:48,240 --> 00:01:50,760
剛剛三個的這個問題

39
00:01:50,760 --> 00:01:51,940
這個問題

40
00:01:51,939 --> 00:01:53,279
我們可以這樣想

41
00:01:53,279 --> 00:01:56,480
我們先把 1、2 搬到 B

42
00:01:56,480 --> 00:01:59,439
再把 3 搬到 C

43
00:01:59,439 --> 00:02:02,279
接著再把 1、2 搬到 C

44
00:02:02,279 --> 00:02:03,980
就可以解決我的問題了

45
00:02:04,639 --> 00:02:05,139
可是呢

46
00:02:05,139 --> 00:02:09,040
剛剛我們說 1、2 不能一次搬到 B

47
00:02:09,040 --> 00:02:10,240
那沒關係

48
00:02:10,240 --> 00:02:13,420
因為我們剛剛在上一個問題中

49
00:02:13,419 --> 00:02:18,100
我們已經說明了 1、2 其實可以搬到 C 的

50
00:02:18,100 --> 00:02:20,239
那既然 1、2 可以搬到 C

51
00:02:20,239 --> 00:02:22,899
我也可以讓 1、2 搬到 B

52
00:02:22,899 --> 00:02:24,200
怎麼搬呢

53
00:02:24,200 --> 00:02:26,200
我先把 1 搬到 C

54
00:02:26,200 --> 00:02:28,200
再把 2 搬到 B

55
00:02:28,200 --> 00:02:31,320
再把 1 搬到 B

56
00:02:31,320 --> 00:02:34,700
這樣就可以把 1、2 搬到 B

57
00:02:34,700 --> 00:02:38,700
那用的方法就跟剛剛是一樣的

58
00:02:38,700 --> 00:02:41,940
只不過我現在的目的地是B

59
00:02:45,239 --> 00:02:48,159
把 C 當成是我的輔助的柱子

60
00:02:48,160 --> 00:02:50,100
就可以解決這個問題

61
00:02:50,100 --> 00:02:51,000
同理呢

62
00:02:51,000 --> 00:02:53,240
把 1、2 搬到 B

63
00:02:53,239 --> 00:02:55,679
把 3 搬到 C 以後

64
00:02:55,679 --> 00:02:58,480
我還要再把 1、2 搬回到 C

65
00:02:58,980 --> 00:03:01,480
那 1、2 剛剛可以搬到 B

66
00:03:01,480 --> 00:03:03,840
現在當然也可以搬到 C

67
00:03:04,639 --> 00:03:07,639
那我把 1、2 搬到 C 的過程中

68
00:03:07,639 --> 00:03:12,459
這時候 A 又扮演一個輔助柱的腳色

69
00:03:14,200 --> 00:03:16,200
那我能夠搬三個

70
00:03:16,200 --> 00:03:18,500
當然就能夠搬四個

71
00:03:18,500 --> 00:03:20,840
搬四個的時候怎麼辦呢

72
00:03:20,839 --> 00:03:22,119
簡單的來講

73
00:03:22,119 --> 00:03:24,879
我把 1、2、3 搬到 B

74
00:03:24,880 --> 00:03:27,200
再把 4 搬到 C

75
00:03:27,200 --> 00:03:29,980
再把 1、2、3 搬到 C

76
00:03:29,980 --> 00:03:31,980
就可以解決這個問題了

77
00:03:31,980 --> 00:03:34,299
那 1、2、3 搬到 B

78
00:03:34,299 --> 00:03:35,459
有沒有困難呢

79
00:03:35,459 --> 00:03:37,059
其實一點困難都沒有

80
00:03:37,060 --> 00:03:39,640
因為剛剛已經把 1、2、3

81
00:03:39,639 --> 00:03:41,399
從 A 搬到 C

82
00:03:41,399 --> 00:03:45,079
自然也可以把 1、2、3 搬到 B

83
00:03:45,079 --> 00:03:48,399
如果我們一直再把 4 這個數字

84
00:03:48,399 --> 00:03:49,279
一直往上加

85
00:03:49,739 --> 00:03:51,439
雖然可以解決

86
00:03:51,440 --> 00:03:53,160
複雜度相當的高

87
00:03:53,160 --> 00:03:54,919
一時間用人腦來搬

88
00:03:54,919 --> 00:03:56,919
也很可能會出錯

89
00:03:57,839 --> 00:04:00,939
但是我們用電腦，程式來解決這個問題

90
00:04:00,940 --> 00:04:02,560
就相當的容易

91
00:04:02,560 --> 00:04:05,540
這會用到一個遞迴函式的呼叫

92
00:04:05,540 --> 00:04:07,179
相當的有效

93
00:04:07,179 --> 00:04:09,899
也是相當重要的一個程式技巧

94
00:04:10,899 --> 00:04:13,099
接著我們來看一下這個程式碼

95
00:04:13,100 --> 00:04:16,180
這程式碼相當的簡潔

96
00:04:16,179 --> 00:04:19,959
最主要就是 move( ) 這個 function

97
00:04:19,959 --> 00:04:21,959
我們看 move( ) 這個 function

98
00:04:21,959 --> 00:04:23,700
帶了四個參數

99
00:04:23,700 --> 00:04:25,320
它的意思就是

100
00:04:25,320 --> 00:04:27,159
我們要從 source

101
00:04:27,959 --> 00:04:31,940
搬 n 個到我的 dest (目的地)

102
00:04:31,940 --> 00:04:35,399
以 aux 作為我的輔助

103
00:04:35,399 --> 00:04:37,679
這個 function 它的定義是這樣子

104
00:04:37,680 --> 00:04:40,200
如果 n = 1

105
00:04:40,380 --> 00:04:41,560
就簡單啦

106
00:04:41,560 --> 00:04:45,660
我就直接從 source 引到 dest

107
00:04:46,880 --> 00:04:48,639
如果不適的話

108
00:04:49,219 --> 00:04:51,219
就找剛剛的講解

109
00:04:51,219 --> 00:04:54,179
我就先把上面的 n - 1 個

110
00:04:54,180 --> 00:04:58,760
從 source 搬移到 aux 這個輔助柱

111
00:04:58,760 --> 00:05:03,860
藉由 dest 當成我的輔助柱

112
00:05:03,860 --> 00:05:06,160
做 n - 1 這樣子 一個搬移

113
00:05:06,159 --> 00:05:07,579
搬移完了以後

114
00:05:07,579 --> 00:05:12,639
緊接著就把 source 下面最大的搬移到 dest

115
00:05:12,639 --> 00:05:14,300
而且是搬移一個

116
00:05:14,300 --> 00:05:21,139
最後再把 aux 上面所有的 n - 1 個搬移到 dest

117
00:05:21,139 --> 00:05:24,380
而且是以 source 作為我的輔助

118
00:05:24,380 --> 00:05:25,659
這樣子的話

119
00:05:25,659 --> 00:05:28,099
實現我們剛剛的情境

120
00:05:28,099 --> 00:05:29,659
那各位注意到

121
00:05:29,659 --> 00:05:33,919
我這個 move( ) 的 function 裡面又不斷的去呼叫

122
00:05:33,920 --> 00:05:35,920
move( ) 這個 function

123
00:05:35,920 --> 00:05:38,760
像這樣子的一種程式技巧

124
00:05:38,760 --> 00:05:40,320
就是一種遞迴

125
00:05:41,440 --> 00:05:44,860
假設我們今天帶進來的東西是 4

126
00:05:44,860 --> 00:05:47,280
n = 4

127
00:05:47,279 --> 00:05:51,200
那個為可以想像它會被分解成 3 1 3

128
00:05:51,200 --> 00:05:54,959
那第一個 3 再被呼叫進來以後

129
00:05:54,959 --> 00:05:58,019
它又分解成 2 1 2

130
00:05:58,019 --> 00:06:02,060
那第一個 2 又被分解成 1 1 1

131
00:06:02,060 --> 00:06:05,519
也就是說不管 n 的值有多大

132
00:06:05,519 --> 00:06:08,139
最後都會被分解成 1 1 1

133
00:06:08,139 --> 00:06:12,279
也就是在這個地方會印出我這個搬移的方法

134
00:06:12,279 --> 00:06:14,279
所有的遞回函式

135
00:06:14,279 --> 00:06:15,619
它非常重要

136
00:06:15,620 --> 00:06:18,780
它都需要有一個中止的條件

137
00:06:18,779 --> 00:06:19,959
以這個例子來講

138
00:06:19,959 --> 00:06:21,839
也就是 n = 1

139
00:06:21,839 --> 00:06:23,839
那我們來時記得看一下

140
00:06:23,839 --> 00:06:25,719
如果我們今天 n = 2

141
00:06:25,719 --> 00:06:28,579
而且要從 "A" 搬移到 "C"

142
00:06:28,579 --> 00:06:31,000
這個程式執行出來

143
00:06:31,000 --> 00:06:33,980
是不是跟我們剛剛想像的是一樣

144
00:06:33,979 --> 00:06:35,459
執行出來

145
00:06:35,459 --> 00:06:38,579
它就是先把 A 搬到 B

146
00:06:38,579 --> 00:06:41,800
再把 A 搬到 C 這個輔助的

147
00:06:41,800 --> 00:06:44,500
再把 B 搬移到 C

148
00:06:44,500 --> 00:06:47,860
這就跟我們剛剛想像得是一樣

149
00:06:47,860 --> 00:06:50,860
如果說我們要搬移的是 3 的話

150
00:06:50,860 --> 00:06:52,860
那我們來執行一下

151
00:06:52,860 --> 00:06:55,139
跑出來的結果是這樣子

152
00:06:55,139 --> 00:06:57,139
那我們可以看得出來

153
00:06:57,139 --> 00:06:58,760
前面這 3 次的搬移

154
00:06:58,760 --> 00:07:02,860
都是為了要把 2 個搬到輔助的柱子

155
00:07:02,860 --> 00:07:06,940
最後是把 A 搬到目的的柱子

156
00:07:06,940 --> 00:07:08,200
接下這 3 個

157
00:07:08,200 --> 00:07:09,940
又把輔助的柱子

158
00:07:09,959 --> 00:07:10,820
上面的 2 個

159
00:07:10,820 --> 00:07:13,079
又搬移到我的目的地

160
00:07:13,079 --> 00:07:15,899
那 4 個的話也沒有問題

161
00:07:17,800 --> 00:07:21,139
那這個就留給大家去驗證

162
00:07:21,139 --> 00:07:23,959
那最後我們來出一個小習題

163
00:07:23,959 --> 00:07:27,159
各位想想看怎麼修改這一支程式

164
00:07:27,159 --> 00:07:30,859
最終可以印出我們搬移的次數

